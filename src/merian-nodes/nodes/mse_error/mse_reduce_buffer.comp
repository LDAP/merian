#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_KHR_shader_subgroup_arithmetic    : enable

#include "mse_layout.glsl"

shared vec4 subgroup_sums[gl_WorkGroupSize.x * gl_WorkGroupSize.y / SUBGROUP_SIZE + 1];

void main() {
    uint index = params.offset * (gl_LocalInvocationIndex + gl_WorkGroupID.x * gl_WorkGroupSize.x);

    vec4 v;
    if (index < params.size) {
        v = result[index];
    } else {
        v = vec4(0);
    }

    v.x = subgroupAdd(v.x);
    v.y = subgroupAdd(v.y);
    v.z = subgroupAdd(v.z);
    v.w = subgroupAdd(v.w);

    if (subgroupElect()) {
        subgroup_sums[gl_SubgroupID] = v;
    }

    barrier();

    if (gl_LocalInvocationIndex == 0) {
        vec4 sum = vec4(0);
        for (int i = 0; i < gl_NumSubgroups; i++) {
            sum += subgroup_sums[i];
        }

        result[index] = sum;
    }

}
