#version 460
#extension GL_GOOGLE_include_directive    : enable

#include "layout.glsl"
#include "merian-shaders/colors/colors_yuv.glsl"

void main() {
  const ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if (any(greaterThanEqual(ipos, imageSize(img_out)))) return;

  const float weights[5] = {0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216};
  vec3 result = vec3(0);
  const vec3 c = texelFetch(img_src, ipos, 0).rgb;
  if (yuv_luminance(c) > pc.threshold) {
    result += c * weights[0];
  }

  // blur horizontally (vertical pass in composite)
  for(int i = 1; i < 5; ++i) {
    const vec3 r = texelFetch(img_src, clamp(ipos + ivec2(i, 0), ivec2(0), textureSize(img_src, 0) - 1), 0).rgb;
    const vec3 l = texelFetch(img_src, clamp(ipos - ivec2(i, 0), ivec2(0), textureSize(img_src, 0) - 1), 0).rgb;

    if (yuv_luminance(r) > pc.threshold)
      result += r * weights[i];
    if (yuv_luminance(l) > pc.threshold)
      result += l * weights[i];
  }

  imageStore(img_interm, ipos, vec4(result, 1));
}
