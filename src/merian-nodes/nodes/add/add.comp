#version 460
#extension GL_GOOGLE_include_directive    : enable

layout(local_size_x_id = 0, local_size_y_id = 1, local_size_z = 1) in;

layout(constant_id = 2) const bool INPUT_0 = false;
layout(constant_id = 3) const bool INPUT_1 = false;
layout(constant_id = 4) const bool INPUT_2 = false;
layout(constant_id = 5) const bool INPUT_3 = false;
layout(constant_id = 6) const bool INPUT_4 = false;
layout(constant_id = 7) const bool INPUT_5 = false;
layout(constant_id = 8) const bool INPUT_6 = false;
layout(constant_id = 9) const bool INPUT_7 = false;
layout(constant_id = 10) const bool INPUT_8 = false;
layout(constant_id = 11) const bool INPUT_9 = false;

layout(set = 0, binding = 0) uniform sampler2D img_0;
layout(set = 0, binding = 1) uniform sampler2D img_1;
layout(set = 0, binding = 2) uniform sampler2D img_2;
layout(set = 0, binding = 3) uniform sampler2D img_3;
layout(set = 0, binding = 4) uniform sampler2D img_4;
layout(set = 0, binding = 5) uniform sampler2D img_5;
layout(set = 0, binding = 6) uniform sampler2D img_6;
layout(set = 0, binding = 7) uniform sampler2D img_7;
layout(set = 0, binding = 8) uniform sampler2D img_8;
layout(set = 0, binding = 9) uniform sampler2D img_9;

layout(set = 0, binding = 10) uniform writeonly restrict image2D img_output;

void main() {
    const ivec2 ipos = ivec2(gl_GlobalInvocationID);
    if (any(greaterThanEqual(ipos, imageSize(img_output)))) return;

    vec4 result = vec4(0);

    if (INPUT_0) {
        result += texelFetch(img_0, ipos, 0);
    }
    if (INPUT_1) {
        result += texelFetch(img_1, ipos, 0);
    }
    if (INPUT_2) {
        result += texelFetch(img_2, ipos, 0);
    }
    if (INPUT_3) {
        result += texelFetch(img_3, ipos, 0);
    }
    if (INPUT_4) {
        result += texelFetch(img_4, ipos, 0);
    }
    if (INPUT_5) {
        result += texelFetch(img_5, ipos, 0);
    }
    if (INPUT_6) {
        result += texelFetch(img_6, ipos, 0);
    }
    if (INPUT_7) {
        result += texelFetch(img_7, ipos, 0);
    }
    if (INPUT_8) {
        result += texelFetch(img_8, ipos, 0);
    }
    if (INPUT_9) {
        result += texelFetch(img_9, ipos, 0);
    }

    imageStore(img_output, ipos, result);
}
