#version 460
#extension GL_GOOGLE_include_directive    : enable

layout(local_size_x_id = 0, local_size_y_id = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform sampler2D img_src;
layout(set = 0, binding = 1) uniform writeonly restrict image2D img_output;

#define FXAA_PC 1
#define FXAA_GLSL_130 1
#define FXAA_QUALITY__PRESET 23

#include "fxaa.h"

layout(push_constant) uniform params_t { 
    int enable;
    float fxaaQualitySubpix;
    float fxaaQualityEdgeThreshold;
    float fxaaQualityEdgeThresholdMin;
} params;

void main() {
    const ivec2 ipos = ivec2(gl_GlobalInvocationID);
    if (any(greaterThanEqual(ipos, imageSize(img_output)))) return;

    const vec2 size = imageSize(img_output);
    const vec2 pos = (vec2(ipos) + 0.5) / size;

    vec4 output_color;
    if (params.enable != 0)
        output_color = FxaaPixelShader(pos,         // center of pixel
                                       vec4(0),     // Used only for FXAA Console; {xy__} = upper left of pixel {__zw} = lower right of pixel
                                       img_src,     // Input color texture, {rgb_} = color in linear or perceptual color space, {___a} = luma in perceptual color space (not linear)
                                       img_src,     // Only used on the optimized 360 version of FXAA Console
                                       img_src,     // Only used on the optimized 360 version of FXAA Console
                                       1. / size,   // Only used on FXAA Quality.
                                       vec4(0),     // Only used on FXAA Console.
                                       vec4(0),     // Only used on FXAA Console.
                                       vec4(0),     // Only used on FXAA Console.
                                       params.fxaaQualitySubpix,
                                       params.fxaaQualityEdgeThreshold,
                                       params.fxaaQualityEdgeThresholdMin,
                                       8.0,         // Only used on FXAA Console.
                                       0.125,       // Only used on FXAA Console.
                                       0.05,        // Only used on FXAA Console.
                                       vec4(0)      // Extra constants for 360 FXAA Console only.
        );
    else
        output_color = texelFetch(img_src, ipos, 0);

    imageStore(img_output, ipos, output_color);
}
