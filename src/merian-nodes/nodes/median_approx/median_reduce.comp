#version 460
#extension GL_GOOGLE_include_directive    : enable

#include "layout.glsl"
#include "merian-shaders/camera.glsl"

const uint hist_size = gl_WorkGroupSize.x * gl_WorkGroupSize.y;
shared uint[hist_size] local_hist;

void main() {
    const uint local_bin = histogram[gl_LocalInvocationIndex];
    local_hist[gl_LocalInvocationIndex] = local_bin * gl_LocalInvocationIndex;
    barrier();

    for (uint split = (hist_size >> 1); split > 0; split >>= 1) {
        if (uint(gl_LocalInvocationIndex) < split) {
          local_hist[gl_LocalInvocationIndex] += local_hist[gl_LocalInvocationIndex + split];
        }
        barrier();
    }

    if (gl_LocalInvocationIndex == 0) {
        const uvec2 image_size = textureSize(img_src, 0).rg;
        const float num_not_lowest = max(image_size.x * image_size.y - float(local_bin), 1.0);

        const float average_bin = (local_hist[0] / num_not_lowest) - 1.0;
        const float approx_median = exp2(((average_bin / float(hist_size - 2.)) * params.max) + params.min);

        result[0] = approx_median;
    }
}
